// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id             String   @id @default(uuid())
    email          String   @unique
    password       String
    name           String?
    isActive       Boolean  @default(true) @map("is_active")
    refreshToken   String?  @map("refresh_token") @db.Text
    createdAt      DateTime @default(now()) @map("created_at")
    updatedAt      DateTime @updatedAt @map("updated_at")
    lastModifiedAt BigInt   @map("last_modified_at")

    // Relations
    projects Project[]
    tasks    Task[]

    @@map("users")
}

model Project {
    id          String   @id @default(uuid())
    name        String
    description String?  @db.Text
    userId      String   @map("user_id")
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")
    createdAtMs BigInt   @map("created_at_ms")
    updatedAtMs BigInt   @map("updated_at_ms")
    isDeleted   Boolean  @default(false) @map("is_deleted")

    // Relations
    user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
    tasks Task[]

    @@index([userId])
    @@index([updatedAtMs])
    @@map("projects")
}

model Task {
    id          String   @id @default(uuid())
    title       String
    description String?  @db.Text
    isCompleted Boolean  @default(false) @map("is_completed")
    projectId   String   @map("project_id")
    userId      String   @map("user_id")
    createdAt   DateTime @default(now()) @map("created_at")
    updatedAt   DateTime @updatedAt @map("updated_at")
    createdAtMs BigInt   @map("created_at_ms")
    updatedAtMs BigInt   @map("updated_at_ms")
    isDeleted   Boolean  @default(false) @map("is_deleted")

    // Relations
    project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
    @@index([projectId])
    @@index([updatedAtMs])
    @@map("tasks")
}
